调试过程记录：
1、UART4 串口log打印

通过烧录原来的程序，能收到打印，确认硬件正确
现在考虑可能是delay_ms 延时函数初始化的问题导致新程序跑不起来

初始化delay_init后有串口日志打印，但是演示不对，是设定的两倍
A:修改为HAL自带的延时函数后，时间正常，应该是和正点原子的delay systick设置不太一样


TIM3 90MHz时钟 1us基准 10us全局时钟分辨率
UART4 500Kbps 波特率

避免全局时间戳多次触发心跳报文:
ms时间戳的更新慢于10us，如果以 ms/1000 == 0

采用ms时间更新标志解决该问题
功耗统计：

无程序空载满芯片 24V 0.145A
去掉DAC+W5500 24V 0.109A
加上DAC 24V 0.24A 

用原来的程序验证了DAC8563的硬件没问题，可以正常产生电压

使能W5500后，整板输入功耗 24V 0.163A 3W电源82%效率，算下来也是2.9W左右的后级输出 吃不消了，已经满载了，等6W电源到了再把剩下的程序加上去，各个模块都调通了一组，应该快了



20240503

更换6W DC/DC后 不接DAC8563，接入W5500时 稳定输入功耗 24.1V 0.147A

启动时因为容性过载过大，需要把DAC8563去掉，待电压稳定后再接入；未接入时 24.1V 0.16A；接入后 24V 0.28A 且DAC模块快速升温烫手，应该是有问题

官网写的DAC8563的功耗是小于 5V 20mA= 0.1W的，那这有问题的；接入8563后电路上升0.12A, 接近3W，应该是振荡了

每日新惊吓： W5500 initial 设置IP等失败了，昨晚的测试被上位机骗了可恶


W5500测试SPI4 逻辑分析仪可以抓到SPI信号，但是写入IP始终失败，需要另行寻找原因
硬件封装摆反了也有些问题，这个不是主要矛盾，先放过

先调CAN


SPI1调试过程:

已确认事项：
1、 原CAS程序+原板+ 无论隔离/非隔离 DAC模块，均可以正常输出电压，侧面印证模块没问题
2、原CAS程序+现板+隔离板，无法输出，逻辑分析仪检测输入侧，CS和SCLK信号正常，但是MOSI信号在10MHz采样下全FF
3、现CAS程序+现板+非隔离板，可以出电压，侧面印证主板信号无问题

现需要测算： 现CAS程序+现板+隔离板 
该项显示SPI1 +ISO_DAC没问题，那看来问题还是在于 SPI1的设置被改过了

换回5.6晚上存的最后一版，看起来是SPI1被其他外设的工作干扰到了……

外设全开之后SPI DAC输出也还是没问题……

疑惑.jpg



2024 05 09 

不能再被LDC拉扯住了，目前测试的情况来看，逻辑分析仪抓信号，SPI3根本没有信号发出


改了程序之后，有SPI信号，但是屏幕还是点不亮

20240509

放弃LCD， SPI2获取IC-MB4 寄存器值成功，等待磁栅尺实测

记录实际重量：
单轴无电机： 3.875kg

SCD init失败

当AGS=0时，主机在完成指令寄存器的写入后（NWR的上升沿）开始数据传输。 如果 SL 线为低电平，且未超过 TIMEOUTSENS，则会生成 nAGSERR 错误。 通过将 FREQAGS 设置为 AGSMIN 可以抑制该错误。 

如果已设置 AGS 位，则会根据 FREQAGS 中设置的循环频率循环读取传感器数据，而无需控制器发出任何进一步的命令

我们是后面一种情况，以AGS=1触发周期性的传感器数据读取

RS485 8byte 115200 发送时间 0.7ms

现在还是只能发送的状态，接收端 RO完全没有波形， RE状态是正确的，就很迷茫

20240531

ETH参数  PC: 192.168.20.33    port: 8888
	    CAS1: 192.168.20.11  port: 8001
		CAS2: 192.168.20.12  port: 8001
		CAS3: ...类推
		
CAN参数  PC:  CANID: 0
        CAS1: CANID: 1
		CAS2: CANID: 2
		
		伺服器CAN ID: 8 500kbps
		
RS485参数: 磁传感器站号0x05
		
		
		
CANOpen:
COB-ID+RTR+	Data(cmdByte+NodeID)	



右侧绝对量程： 9259537 um - 9769376 um
左侧绝对量程： 8697903 um - 9203551 um



20240601

发送SDO会触发硬件HardFault，原因正在寻找中

Alt键无响应了，回头重启电脑看看


20240701

0628可以获取数据，但开启TIM4之后，BISS-C过于频繁的软复位会导致AMG2000错误必须掉电恢复
在没有TIM4参与的前提下，这种软复位的错误率被控制在 0.6%以内，且常态低于0.01%

但如果有TIM4参与，会导致从10几秒位置开始，连续复位两次以上，使得AMG2000挂掉


1、尝试收紧软复位条件以降低软复位频率，再看AMG2000会不会挂掉
2、对BISSC获取使用临界区保护，会导致




需要拆分逻辑，复位放到主循环，临界区代码只给标志位

目前测试TIM3 10us为时基的情况下，实际的帧数只有3.5K左右，在保持对0xF0数据刷新的前提下，正常数据错误率在25.8%左右徘徊


加入临界区代码后可以运行，但是时基好像有点问题，现在1s发23000帧
和外界实际对比 单片机跑1s,约等于7s



// 2024.07.01
// 之所以没有跑在10KHz获取，一方面实际TIM3定时精度不高
// 和外界时间比电脑30s 实际log输出TIM3计时25s
// 第二 跑10KHz，实际值能到3.6KHz左右 且数据有效率在100万帧后出现显著下降 74.2% -> 73.7%
// 最后，上位机精度也就是1ms，通信周期目前是20ms 最后压到10ms可能就到canopen精度了(时差允许范围3ms)
// 实测1ms左右，位置获取是有1000帧的，而且有效率稳定在75.1%

// 但是加入临界区后，导致实际单片机TIM3定时不准，降低位置环获取频率观察
// 目前实际在4770帧左右，有